@model PhoneStore.Web.Models.CustomerLoanPaymentViewModel;
@inject PhoneStore.Web.Resources.LocService L;
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@L["Customers Loan List"]</h4>
                <div class="d-flex justify-content-end">
                    <!--begin::Add user-->
                    <a type="button" class="btn btn-primary mb-2" asp-action="Create" asp-controller="CustomerSales">
                        <span class="fa fa-plus"></span>
                    </a>
                    <!--end::Add user-->
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="dtTable" class="display" style="min-width: 845px; width: 100%;">
                        <thead>
                            <tr>
                                <th>@L["Customer Name"]</th>
                                <th>@L["UnPaid Amount"]</th>
                                <th>@L["Action"]</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@* Customer Loan Details Modal*@
<div id="CustomerLoanDetailsModal" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="card-title">@L["Customers Loan List"]</h4>
                <button type="button" class="btn btn-danger light" data-dismiss="modal"> <span>&times;</span></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table id="dtTable2" class="display" style="min-width: 845px; width: 100%;">
                        <thead>
                            <tr>
                                <th>@L["Good Name"]</th>
                                <th>@L["Quantity"]</th>
                                <th>@L["Sale Price"]</th>
                                <th>@L["Total Price"]</th>
                                <th>@L["Paid Amount"]</th>
                                <th>@L["UnPaid Amount"]</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger light" data-dismiss="modal">@L["Close"]</button>
                    </div>
                </div>
                <!--end::Modal content-->
            </div>
            <!--end::Modal dialog-->
        </div>
    </div>
</div>
@* Edit Sales Model *@
<div id="EditSalesModal" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@L["Update Sale"]</h5>
                <button type="button" class="btn btn-danger light" data-dismiss="modal"> <span>&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="EditSalesFrm" method="post">
                    <input type="hidden" asp-for="SalesDto.Id" />
                    <input type="hidden" asp-for="SalesDto.CustomerId" />
                    <input type="hidden" asp-for="SalesDto.GoodId" />

                    <div class="modal-body py-lg-10 px-lg-10">
                        <div class="form-group row mb-2">
                            <div class="col-md-4 mb-2">
                                <label asp-for="SalesDto.SaleAmount" class="required form-label"></label>
                                <input asp-for="SalesDto.SaleAmount" type="number" class="form-control amount" />
                                <span asp-validation-for="SalesDto.SaleAmount" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-2">
                                <label asp-for="SalesDto.SaleUnitPrice" class="required form-label"></label>
                                <input asp-for="SalesDto.SaleUnitPrice" class="form-control unit-price" />
                                <span asp-validation-for="SalesDto.SaleUnitPrice" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group row mb-2">

                            <div class="col-md-4 mb-2">
                                <label asp-for="SalesDto.TotalPrice" class="required form-label"></label>
                                <input asp-for="SalesDto.TotalPrice" class="form-control total-price" readonly />
                                <span asp-validation-for="SalesDto.TotalPrice" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-2">
                                <label asp-for="SalesDto.PaidAmount" class="required form-label"></label>
                                <input asp-for="SalesDto.PaidAmount" class="form-control paid" />
                                <span asp-validation-for="SalesDto.PaidAmount" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-2">
                                <label asp-for="SalesDto.UnPaidAmount" class="required form-label"></label>
                                <input asp-for="SalesDto.UnPaidAmount" class="form-control unpaid" readonly />
                                <span asp-validation-for="SalesDto.UnPaidAmount" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger light" data-dismiss="modal">@L["Close"]</button>
                        <button type="submit" class="btn btn-primary">@L["Update"]</button>
                    </div>
                </form>
            </div>
            <!--end::Modal content-->
        </div>
        <!--end::Modal dialog-->
    </div>
</div>
@* Add CustomerPayment Modal *@
<div id="addCustomerPaymentModal" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@L["Add Customer Payment"]</h5>
                <button type="button" class="btn btn-danger light" data-dismiss="modal"> <span>&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmAddCustomerPayment" method="post">
                    <input type="hidden" asp-for="CustomersPaymentDto.CustomerId" id="customerId">
                    <input type="hidden" asp-for="CustomersPaymentDto.SalesId" id="id">
                    <div class="modal-body py-lg-10 px-lg-10">
                        <div class="form-group row mb-2">
                            <div class="col-md-12 mb-2">
                                <label asp-for="CustomersPaymentDto.PaymentAmount" class="required form-label"></label>
                                <input asp-for="CustomersPaymentDto.PaymentAmount" class="form-control" />
                                <span asp-validation-for="CustomersPaymentDto.PaymentAmount" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger light" data-dismiss="modal">@L["Close"]</button>
                        <button type="submit" class="btn btn-primary">@L["Save Changes"]</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Script {
    <script>
        var dtTable;
        var i = 1;
        var shouldCallFunction = true;
        $(function () {
            dtTable = $("#dtTable").DataTable({
                language: {
                    paginate: {
                        next: '<i class="fa fa-angle-double-right" aria-hidden="true"></i>',
                        previous: '<i class="fa fa-angle-double-left" aria-hidden="true"></i>'
                    }
                },
                "processing": true,
                // "serverSide": true,
                "orderMulti": false,
                //"filter": true,
                "ajax": {
                    "url": "/PhoneStore/Sales/CustomersLoan",
                    "type": "GET",
                    "datatype": "json"
                },
                "emptyrecords": 'No records to display',
                "lengthMenu": [[10, 25, 50, 100, 150, 200], [10, 25, 50, 100, 150, 200]],
                "aoColumns": [
                    { "data": "customer" },
                    { "data": "unPaidAmount" },
                    {
                        targets: -1,
                        data: null,
                        orderable: false,
                        className: 'text-end',
                        "mRender": function (data, type, row) {
                            return `<a href="#" class="btn btn-outline-info shadow btn-sm" data-toggle="modal" data-target="#CustomerLoanDetailsModal" data-customer-id="${row.customerId}"><i class="fa fa-eye"></i></a>
                                    <a onclick="addPayment(${row.customerId},${row.id})" class="btn btn-success shadow btn-sm" data-toggle="modal" data-target="#addCustomerPaymentModal" ><span class = "text-white">Pay</span></a>`;
                        }
                    }
                ]
            });
            $('.search-input').on('keyup change', function () {
                var index = $(this).attr('data'),

                    val = $(this).val();
                dtTable.search(val.trim()).draw();
            });
        });

        $(function () {
            // Event listener for when the modal is opened
            $('#CustomerLoanDetailsModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var customerId = button.data('customer-id'); // Extract customerId from data-* attribute

                // Destroy the previous instance of DataTable if it exists
                if ($.fn.DataTable.isDataTable('#dtTable2')) {
                    $('#dtTable2').DataTable().clear().destroy();
                }

                // Initialize the DataTable with the specific customer's loans
                dtTable = $("#dtTable2").DataTable({
                    language: {
                        paginate: {
                            next: '<i class="fa fa-angle-double-right" aria-hidden="true"></i>',
                            previous: '<i class="fa fa-angle-double-left" aria-hidden="true"></i>'
                        }
                    },
                    "processing": true,
                    "serverSide": false,
                    "orderMulti": false,
                    "ajax": {
                        "url": "/PhoneStore/Sales/CustomersLoanDetails", // Your API endpoint
                        "type": "GET",
                        "data": { customerId: customerId }, // Pass the customerId to the server
                        "datatype": "json"
                    },
                    "emptyrecords": 'No records to display',
                    "lengthMenu": [[10, 25, 50, 100, 150, 200], [10, 25, 50, 100, 150, 200]],
                    "columns": [
                        { "data": "goodName" },
                        { "data": "saleAmount" },
                        { "data": "saleUnitPrice" },
                        { "data": "totalPrice" },
                        { "data": "paidAmount" },
                        { "data": "unPaidAmount" }
                    ]
                });
            });
        });




        $('#EditSalesFrm').on('submit', function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            $.ajax({
                url: "Sales/EditSale",
                type: $(this).attr('method'),
                data: $(this).serialize(),
                dataType: "json",
                success: function (response) {
                    if (response.data) {
                        $('#EditSalesModal').modal('hide');
                        $("#dtTable").DataTable().ajax.reload();
                        $('#EditSalesFrm').trigger("reset");
                        notification("@Html.Raw(L["success"])", "@Html.Raw(L["Sale updated successfully"])", "success");
                    }
                    else {
                        notification("@Html.Raw(L["failed"])", "@Html.Raw(L["Sale is Already Exist"])", "warning");
                    }
                },
                error: function (xhr, status, error) {
                    notification("@Html.Raw(L["error"])", "@Html.Raw(L["An Error Has beed Occured Pleas Try Again"])", "error");
                }
            });
        });
      
        function loadSales(id) {
            $.ajax({
                url: "/PhoneStore/Sales/GetSale",
                type: "Get",
                data: { id: id },
                dataType: "json",
                success: function (response) {
                    for (var propName in response.data) {
                        if (response.data.hasOwnProperty(propName)) {
                            var Prop = propName.replace(/^"(.*)"$/, '$1');
                            var Value = response.data[Prop];
                            var Capital = propName.charAt(0).toUpperCase() + propName.slice(1);
                            $('#EditSalesFrm input[id="' + Capital + '"]').val(Value);
                        }
                    }
                }
            });
        }

        $('#frmAddCustomerPayment').on('submit', function (e) {
            e.preventDefault();
            var formData = new FormData(this);
            $.ajax({
                url: "/PhoneStore/CustomersPayment/AddCustomerPayment",
                type: $(this).attr('method'),
                data: $(this).serialize(),
                dataType: "json",
                success: function (response) {
                    if (response.data) {
                        $('#addCustomerPaymentModal').modal('hide');
                        $("#dtTable").DataTable().ajax.reload();
                        $('#frmAddCustomerPayment').trigger("reset");
                        notification("@Html.Raw(L["success"])", "@Html.Raw(L["Customer Payment has been added successfully"])", "success");
                    }
                    else {
                        notification("@Html.Raw(L["failed"])", "@Html.Raw(L["Customer Payment is Already Exist"])", "warning");
                    }

                },
                error: function (xhr, status, error) {
                    notification("@Html.Raw(L["error"])", "@Html.Raw(L["An Error Has beed Occured Pleas Try Again"])", "error");
                }
            });
        });
        function addPayment(customerId, id){
            console.log(customerId);
            console.log(id);

            $("#customerId").val(customerId);
            $("#id").val(id);
        }
        $(document).on('change input', '.amount, .unit-price', function () {

            // Get the values from the current row
            var Amount = $('.amount').val();
            var UnitPrice = $('.unit-price').val();

            // Ensure both are numbers
            var totalPrice = parseFloat(Amount) * parseFloat(UnitPrice);

            // Set the TotalPrice field in the current row
            $('.total-price').val(totalPrice);
        });

        // Handle change or input for paid amount
        $(document).on('change input', '.paid, .amount, .unit-price', function () {
            // Get the values from the current row
            var Paid = $('.paid').val();
            var TotalPrice = $('.total-price').val();

            // Calculate unpaid amount
            var UnPaid = parseFloat(TotalPrice) - parseFloat(Paid);

            // Set the UnPaid field in the current row
            $('.unpaid').val(UnPaid);
        });


    </script>
}